---
layout: post
title:  "http"
date:   2023-09-13 12:00:00 +0300
categories: jekyll update
---

Это машинный перевод статьи **HTTP examples** из курса *Introduction-to-back-end-development*

<br>
# HTTP примеры

В этом материале более подробно рассматривается содержание HTTP-запросов и ответов

<br>
# Строка запроса

Каждый HTTP-запрос начинается со строки запроса ( request line )

Он ( запрос ) состоит из метода HTTP, запрашиваемого ресурса и версии протокола HTTP

`GET /home.html HTTP/1.1`

В данном примере в качестве http метода используется `GET`

в качестве запрашиваемого ресурса `/home.html`

а в качестве протокола - HTTP 1.1

<br>
# HTTP методы 

| http метод | описание |
|------------|----------|
| GET        | Клиент запрашивает ресурс на веб-сервере | 
| POST       | Клиент передает данные ресурсу на веб-сервере | 
| PUT        | Клиент заменяет ресурс на веб-сервере | 
| DELETE     | Клиент удаляет ресурс на веб-сервере | 

<br>
# Заголовки http-запросов

После строки запроса через перенос строки ( разрыв строки ) следуют заголовки HTTP

Существуют различные возможности включения HTTP-заголовка в HTTP-запрос

Заголовок представляет собой имя, не зависящее от регистра,

за которым следует символ`:`, а затем значение

<br>
## Общими заголовками являются

```
Host: example.com
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:50.0) Gecko/20100101 Firefox/50.0
Accept: */*
Accept-Language: en
Content-type: text/json
```

* `Host`  

Заголовок Host определяет хост сервера и указывает, откуда запрашивается ресурс

* `User-Agent`

Заголовок User-Agent информирует веб-сервер о приложении, выполняющем запрос

В нем часто указывается операционная система ( Windows, Mac, Linux ), версия и производитель приложения

* `Accept`

Заголовок Accept сообщает веб-серверу, какой тип содержимого будет принят клиентом в качестве ответа

* `Accept-Language`

Заголовок Accept-Language указывает язык и, опционально, локаль, которые предпочитает клиент

* `Content-type`

Заголовок Content-type указывает на тип содержимого, передаваемого в теле запроса

<br>
## Тело http-запроса

HTTP-запросы могут опционально включать тело запроса

Тело запроса часто включается при использовании методов http `POST` и `PUT` для передачи данных

```post
POST /users HTTP/1.1
Host: example.com

{
 "key1": "value1",
 "key2": "value2",
 "array1": [ "value3", "value4" ]
}
```

```put
PUT /users/1 HTTP/1.1
Host: example.com
Content-type: text/json

{ "key1": "value1" }
```

<br>
## http ответ

Когда веб-сервер закончит обработку http-запроса, он отправит http-ответ

Первой строкой ответа является строка состояния

Эта строка показывает клиенту, был ли запрос выполнен успешно или произошла ошибка

`HTTP/1.1 200 OK`

Строка начинается с версии протокола HTTP, затем следует код состояния и фраза причины

Фраза причины является текстовым представлением кода состояния

<br>
## Коды состояния http

Первая цифра кода состояния `http` указывает на категорию ответа

1. Информация
2. Успешно
3. Перенаправление
4. Ошибка клиента
5. Ошибка сервера

Для каждой категории часто встречаются следующие коды состояния

*1XX Информация*

| Код состояния | Причинная фраза | Описание |
|---------------|-----------------|----------|
| 100           | Continue             | Сервер получил заголовки запроса и должен продолжить отправку тела запроса |
| 101           | Switching Protocols  | Клиент попросил сервер переключить протоколы, и сервер согласился сделать это |

*2XX Успех*

| Код состояния | Причинная фраза | Описание |
|---------------|-----------------|----------|
| 200           | OK              | Стандартный ответ, возвращаемый сервером и свидетельствующий об успешной обработке запроса |
| 201           | Created         | Сервер успешно обработал запрос, и ресурс был создан |
| 202           | Accepted        | Сервер принял запрос на обработку, но обработка еще не завершена |
| 204           | No Content      | Сервер успешно обработал запрос, но не возвращает никакого содержимого |

*3XX Перенаправление*

| Код состояния | Причинная фраза | Описание |
|---------------|-----------------|----------|
| 301           | Moved Permanently               | Этот запрос и все последующие запросы должны быть направлены в возвращаемое место |
| 302           | Found               | Этот запрос должен быть отправлен в возвращаемое место |

*4XX Ошибка клиента*

| Код состояния | Причинная фраза | Описание |
|---------------|-----------------|----------|
| 400           | Bad Request     | Сервер не может обработать запрос из-за ошибки клиента, например, некорректный запрос или слишком большой объем передаваемых данных         |
| 401           | Unauthorized    | Клиент, выполняющий запрос, является неавторизованным и должен пройти аутентификацию         |
| 403           | Forbidden       | Запрос был корректным, но сервер отказывается его обрабатывать. Обычно запрос возвращается из-за того, что клиент не имеет достаточных прав доступа к сайту, например, запрашивается действие администратора, но пользователь не является администратором         |
| 404           | Not Found       | Сервер не нашел запрашиваемый ресурс         |
| 405           | Method Not Allowed | Веб-сервер не поддерживает используемый `http` метод          |

*5XX Ошибка сервера*

| Код состояния | Причинная фраза | Описание |
|---------------|-----------------|----------|
| 500           | Internal Server Error     | Общий код состояния ошибки, выдаваемый, если при обработке запроса возникла непредвиденная ошибка или условие |
| 502           | Bad Gateway     | Веб-сервер получил недопустимый ответ от сервера приложений |
| 503           | Service Unavailable     | Веб-сервер не может обработать запрос |

<br>
## Заголовки http-ответа

После строки состояния следуют необязательные заголовки http-ответа, за которыми следует перевод строки

Как и в случае с заголовками запроса, существует множество возможных заголовков HTTP, которые могут быть включены в HTTP-ответ

Общими заголовками ответа являются

```
Date: Fri, 11 Feb 2022 15:00:00 GMT+2
Server: Apache/2.2.14 (Linux)
Content-Length: 84
Content-Type: text/html
```

* `Date`

Заголовок Date указывает дату и время формирования HTTP-ответа

* `Server`

Заголовок Server описывает программное обеспечение веб-сервера, используемое для генерации ответа

* ` Content-Length`

Заголовок Content-Length описывает длину ответа

* `Content-Type`

Заголовок Content-Type описывает медиатип возвращаемого ресурса

( например, HTML-документ, изображение, видео )

<br>
## Тело ответа HTTP

После заголовков HTTP-ответа следует тело HTTP-ответа

Это основное содержимое HTTP-ответа

Они могут содержать изображения, видео, HTML-документы и другие типы мультимедиа

```
HTTP/1.1 200 OK
Date: Fri, 11 Feb 2022 15:00:00 GMT+2
Server: Apache/2.2.14 (Linux)
Content-Length: 84
Content-Type: text/html

<html>
  <head><title>Test</title></head>
  <body>Test HTML page.</body>
</html>
```
<br>
# introduction-to-back-end-development

```
```

<br>
## [coursera.org](https://www.coursera.org)